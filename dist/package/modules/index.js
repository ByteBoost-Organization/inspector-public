"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.BaseDataModule=exports.BaseModule=void 0;const eventBus_1=require("./eventBus"),object_1=require("../utils/object"),engine_1=require("../engine");class BaseModule{state;namespace;isPolling=!1;_eventBus;constructor(e){this.namespace=e}get byteboost(){return window._byteboost}bindEventBus(e){this._eventBus=e}get eventBus(){if("eventBus"===this.namespace)throw Error("Cannot access EventBus on EventBus");return this._eventBus}onPoll(){}receivePolls(){var e=this.byteboost.getModule("eventBus");if(!e)throw new Error("Unable to find the event bus module. unable to start module polling.");e.addModulePolling(this),this.isPolling=!0}cleanup(){}onBuildNeeded(){var e=this.build();this.state={updated:Date.now(),...e}}unpack(e){this.state=e,this.bindDefaultPersistantData(e)}bindDefaultPersistantData(e){this.state.updated=Date.now()}async pack(){return this.state}}exports.BaseModule=BaseModule;const SYNC_EVENT_INTERVAL=15e3;class BaseDataModule extends BaseModule{syncPathName;isDataModule=!0;isSyncActive=!1;constructor(e){super(e),this.syncPathName=this.namespace}initialize(){this.doSync()}formatSyncData(){return(0,object_1.cloneObject)(this.state)}baseFormatSyncData(e){var t=this.formatSyncData();return!0===t?._empty?(this.byteboost.debug("will dispatch onSyncSkipped",this.namespace),e.dispatchEvent(new eventBus_1.ByteEvent(this.namespace,"onSyncSkipped",t,90).wait(SYNC_EVENT_INTERVAL)),null):{data:t,_syncRequestedAt:Date.now()}}sync(e){var t=this.baseFormatSyncData(e);t&&e.dispatchEvent(new eventBus_1.ByteEvent("request","sync",{path:engine_1.BASE_API_URL+"/v1beta/events/"+(this.syncPathName??this.namespace),event:new eventBus_1.ByteEvent(this.namespace,"onSync",{},90).flatten(),data:t},100).wait(SYNC_EVENT_INTERVAL))}doSync(){const t=this.byteboost.getModule("eventBus");if(!t)throw"[byteboost] un-able to get eventBus";this.isSyncActive=!0,t.declareGarbage(this.namespace,"onSync"),t.declareGarbage(this.namespace,"onSyncSkipped"),t.listen(this.namespace,"onSyncSkipped",e=>{!0===e?._empty&&this.sync(t)}),t.listen(this.namespace,"onSync",e=>{this.onSync(e),this.sync(t)}),this.sync(t)}async forceSend(){var e,t;this.isSyncActive&&(e=this.byteboost.getModule("eventBus"))&&(e=this.baseFormatSyncData(e))&&(t=this.byteboost.getModule("request"))&&t.post(engine_1.BASE_API_URL+"/v1beta/events/"+this.syncPathName,e)}}exports.BaseDataModule=BaseDataModule;
