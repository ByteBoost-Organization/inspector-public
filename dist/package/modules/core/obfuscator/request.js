"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.requestObfuscator=void 0;const object_1=require("package/utils/object"),types_1=require("../types"),safeHeaders=["a-im","accept","accept-charset","accept-datetime","accept-encoding","accept-language","access-control-request-method","cache-control","connection","content-encoding","content-type","date","expect","host","if-modified-since","if-unmodified-since","max-forwards","origin","pragma","prefer","range","referer","te","trailer","transfer-encoding","user-agent","upgrade","via","warning","upgrade-insecure-requests","x-requested-with","dnt","x-forwarded-host","x-forwarded-proto","front-end-https","x-http-method-override","proxy-connection","save-data","sec-gpc","accept-ch","access-control-allow-credentials","access-control-expose-headers","access-control-max-age","access-control-allow-methods","access-control-allow-headers","access-control-allow-origin","accept-patch","accept-ranges","age","allow","alt-svc","cache-control","connection","content-disposition","content-encoding","content-language","content-length","content-location","content-range","content-type","date","delta-base","expires","im","last-modified","link","location","pragma","preference-applied","proxy-authenticate","public-key-pins","retry-after","server","strict-transport-security","trailer","transfer-encoding","tk","upgrade","vary","via","warning","www-authenticate","x-frame-options","x-content-security-policy","x-webkit-csp","content-security-policy","expect-ct","nel","permissions-policy","refresh","report-to","status","timing-allow-origin","x-content-duration","x-content-type-options","x-powered-by","x-redirect-by","x-request-id","x-correlation-id","x-ua-compatible","x-xss-protection"],fineHeaders=["content-length","forwarded",...safeHeaders],riskHeaders=["access-control-request-headers","content-md5","from","http2-settings","if-match","if-none-match","if-range","proxy-authorization","x-forwarded-for","x-att-deviceid","x-wap-profile","x-uidh","x-correlation-id","correlation-id","x-request-id","content-md5","etag","p3p",...fineHeaders],headerRiskMap={[types_1.ObfuscateLevel.HIGH]:safeHeaders,[types_1.ObfuscateLevel.MEDIUM]:fineHeaders,[types_1.ObfuscateLevel.LOW]:riskHeaders},obfuscateHeaders=(e,t)=>{var r={};for(const a in e)headerRiskMap[t].includes(a)&&(r[a]=e[a]);return r},requestObfuscator=(t,r)=>{t=(0,object_1.cloneObject)(t);if(t.requestHeaders=obfuscateHeaders(t.requestHeaders,r),t.responseHeaders=obfuscateHeaders(t.responseHeaders,r),t.url.includes("?")&&r!==types_1.ObfuscateLevel.LOW){let e=t.url.split("?")[1];e=r===types_1.ObfuscateLevel.HIGH?"[QUERY_STRING_OBFUSCATED]":e.split("&").map(e=>{var[e,t]=e.split("=");return e&&t?e+"=[SOME_OBFUSCATED_VALUE]":"[NULL]"}).join("&"),t.url=t.url.substring(0,t.url.indexOf("?"))+("?"+e)}return t};exports.requestObfuscator=requestObfuscator;
