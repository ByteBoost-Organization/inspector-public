self.addEventListener("install",()=>{self.skipWaiting()}),self.addEventListener("activate",e=>{e.waitUntil(clients.claim())});let allRequests=[];const UNABLE_TO_PARSE_METHOD="UNABLE_TO_PARSE_METHOD",isSuccessResponse=e=>199<e&&e<300,tryParseMethod=async(e,s)=>{try{return await e[s]()}catch(e){return UNABLE_TO_PARSE_METHOD}};self.addEventListener("fetch",async s=>{var e,t,r={};for([e,t]of s.request.headers.entries())r[e]=t;const a={method:s.request.method,referrer:s.request.referrer,url:s.request.url,when:Date.now(),requestHeaders:r,responseFailed:!1};if(!a.url.includes("external.api.byteboost.io")){let e;try{var n=Date.now();e=await fetch(s.request),a.status=e.status,a.statusText=e.statusText,a.ok=e.ok,a.type=e.type,a.redirected=e.redirected,a.took=Date.now()-n}catch(e){a.responseFailed=!0}s=()=>{allRequests.push(a)};if(!isSuccessResponse(a.status)||a.responseFailed)return s();var i,l,u={};for([i,l]of e.headers.entries())u[i]=l;if(a.responseHeaders=u,!e.headers.get("content-type"))return s();allRequests.push(a)}}),self.addEventListener("message",async e=>{var s=e.source.id;s&&(s=await clients.get(s))&&"requests:get"===e.data.id&&(e=allRequests.slice(),allRequests=[],s.postMessage({id:"requests:get",payload:e}))});
